Qestion 1 :

As string in java is of reference type, so to not change the value for every reference call,
string is immutable in java.
For eg. If five reference variable points to the same string in string loop, if strings were mutable,
change the value of on variable will reflect in all others;

String is immutable in java whereas String Builder is mutable.
Memory requirement is more in case of string than string builder for concatination.
String builder is faster than string for concatination.


Methods of String class - 
String.equals(Object obj)
Strings.substring(int i)
String.compareTo(Object obj)
String.toUpperCase()
String.lastIndexOf(char c)


Question 5 : 

Static polymorphism is basically method overloading in java.
If we have multiple function with same name but with different parameters,then,
when we call the method,that function will be called that has parameters suitable with
the caller.
For eg - Shapes class and ShapeMain class;

